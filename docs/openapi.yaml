openapi: 3.1.0
info:
  title: NewsBrief Core API
  version: 1.0.0
  description: API for authentication, email verification, and Google OAuth.
servers:
  - url: https://news-brief-core-api-excr.onrender.com
  - url: http://localhost:8080
paths:
  /api/v1/auth/register:
    post:
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [full_name, email, password]
              properties:
                full_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/v1/auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
  /api/v1/auth/refresh-token:
    post:
      summary: Refresh tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refresh_token]
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
  /api/v1/auth/request-verification-email:
    post:
      summary: Send verification email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: OK
  /api/v1/auth/verify-email:
    get:
      summary: Verify email
      parameters:
        - in: query
          name: verifier
          required: true
          schema:
            type: string
        - in: query
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: platform
          schema:
            type: string
            enum: [web, mobile]
      responses:
        '200':
          description: OK (JSON for mobile or when no redirect)
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '302':
          description: Redirect to frontend with tokens in fragment
  /api/v1/auth/google/login:
    get:
      summary: Google OAuth login
      parameters:
        - in: query
          name: platform
          schema:
            type: string
            enum: [web, mobile]
      responses:
        '302':
          description: Redirect to Google OAuth consent
  /api/v1/auth/google/callback:
    get:
      summary: Google OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: query
          name: state
          required: true
          schema:
            type: string
        - in: query
          name: platform
          schema:
            type: string
            enum: [web, mobile]
      responses:
        '200':
          description: Tokens for mobile
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '302':
          description: Redirect with tokens in fragment
  /api/v1/auth/forgot-password:
    post:
      summary: Forgot password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: OK
  /api/v1/auth/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, verifier, password]
              properties:
                token:
                  type: string
                verifier:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
  /api/v1/auth/logout:
    post:
      summary: Logout (revoke refresh token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refresh_token]
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: OK
  /api/v1/users/profile/{id}:
    get:
      summary: Get user profile by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/me:
    get:
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update current user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                fullname:
                  type: string
                avatar_url:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
        fullname:
          type: string
          nullable: true
        avatar_url:
          type: string
          nullable: true
        is_verified:
          type: boolean
        created_at:
          type: string
          format: date-time

